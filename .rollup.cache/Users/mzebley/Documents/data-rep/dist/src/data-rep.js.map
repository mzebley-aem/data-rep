{"version":3,"file":"data-rep.js","sourceRoot":"","sources":["../../src/data-rep.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html } from \"lit\";\nimport { unsafeHTML } from \"lit/directives/unsafe-html.js\";\nimport { customElement, property } from \"lit/decorators.js\";\nimport styles from \"./styles/index.css\";\n\n@customElement(\"data-rep\")\nexport class DataRep extends LitElement {\n  static styles = [styles];\n\n  // Public properties\n  @property()\n  header?: string = \"Title\";\n\n  @property()\n  insight?: string = \"Insights\";\n\n  @property({\n    converter: (attrValue: string | null) => {\n      if (attrValue) return JSON.parse(attrValue);\n      else\n        return console.error(\n          \"No data provided, or data is in an unrecognized format.\"\n        );\n    },\n  })\n  data: Array<{\n    label: string;\n    value: number;\n    definition?: string;\n    percentage?: number;\n    largest?: boolean;\n    flexAmount?: number;\n  }> = [];\n\n  @property({ type: Boolean })\n  useH1?: boolean = false;\n\n  @property()\n  explanationMaxCount?: number = 5;\n\n  @property()\n  // Setting 'localization' to undefined by default will force the browser to use the user's locale\n  localization?: string = undefined;\n\n  // Private properties\n  private total: number = 0;\n  @property()\n  // @property() is a decorator that defines a reactive property.\n  private showExplanation: boolean = false;\n  private explanation: string = \"\";\n  @property()\n  private showGlossaryBtn: boolean = false;\n  @property()\n  private showGlossary: boolean = false;\n  private previouslyFocusedElement: HTMLElement | null = null;\n  private firstFocusableElement: HTMLElement | null = null;\n  private lastFocusableElement: HTMLElement | null = null;\n  private focusableElementsString =\n    'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex=\"0\"], [contenteditable]';\n\n  constructor() {\n    super();\n    // Define reactive properties--updating a reactive property causes\n    // the component to update.\n\n    this.showGlossaryBtn = false;\n    this.showGlossary = false;\n    this.showExplanation = false;\n    this.total = 0;\n    this.useH1 = false;\n    this.localization = undefined;\n\n    document.addEventListener(\"keydown\", (event) => {\n      if (event.key === \"Escape\") {\n        this.closeModal();\n      }\n    });\n  }\n\n  // The render() method is called any time reactive properties change.\n  // Return HTML in a string template literal tagged with the `html`\n  // tag function to describe the component's internal DOM.\n  // Expressions can set attribute values, property values, event handlers,\n  // and child nodes/text.\n  render() {\n    if (this.data.length) {\n      // If data is an array of objects, check if it has the optional definition property\n      if (this.data[0].definition) this.showGlossaryBtn = true;\n\n      // Generate plain language summary\n      this.generateExplanation();\n\n      // Calculate total\n      this.total = this.data.reduce((acc, item) => acc + item.value, 0);\n      // console.log(this.total);\n\n      // Find largest value\n      const largestValue = this.data.reduce(\n        (max, item) => Math.max(max, item.value),\n        this.data[0].value\n      );\n\n      // Calculate percentages and flex amount based on largest value\n      // Flex amount is determined by dividing the item's value by the largest value\n      // In the visual representation, the largest value fills the full width of the chart\n      // effectively setting itself as \"100%\"\n      this.data = this.data.map((item) => {\n        item.percentage = (item.value / this.total) * 100;\n        item.largest = item.value === largestValue;\n        item.flexAmount = item.value / largestValue;\n        return item;\n      });\n      // Sort the array from largest to smallest\n      this.data.sort((a, b) => b.value - a.value);\n      // console.log(this.data);\n    }\n\n    return html`\n      <article>\n        ${this.useH1\n          ? html`<h1 class=\"heading\">${this.header}</h1>`\n          : html`<h2 class=\"heading\">${this.header}</h2>`}\n        <p class=\"insight\">\n          ${this.isHtml(this.insight) ? unsafeHTML(this.insight) : this.insight}\n        </p>\n        <div class=\"action-bar\">\n          <button\n            @click=${this.togglePlainLanguage}\n            id=\"explainSwitchDisability\"\n            aria-pressed=\"false\"\n            aria-controls=\"explainRegionDisability\"\n          >\n            ${this.showExplanation\n              ? html`<svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  class=\"icon icon-tabler icon-tabler-toggle-right\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  fill=\"none\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  aria-hidden=\"true\"\n                >\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M2 6m0 6a6 6 0 0 1 6 -6h8a6 6 0 0 1 6 6v0a6 6 0 0 1 -6 6h-8a6 6 0 0 1 -6 -6z\"\n                  ></path>\n                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                  <path\n                    d=\"M16 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0\"\n                    id=\"active-toggle\"\n                  ></path>\n                </svg>`\n              : html`<svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  class=\"icon icon-tabler icon-tabler-toggle-left\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  fill=\"none\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  aria-hidden=\"true\"\n                >\n                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                  <path d=\"M8 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0\"></path>\n                  <path\n                    d=\"M2 6m0 6a6 6 0 0 1 6 -6h8a6 6 0 0 1 6 6v0a6 6 0 0 1 -6 6h-8a6 6 0 0 1 -6 -6z\"\n                  ></path>\n                </svg>`}\n            <label for=\"explainSwitchDisability\">Explain</label>\n          </button>\n          <button\n          @click=${this.toggleGlossary}\n          id=\"glossarySwitchDisability\"\n          aria-pressed=\"false\"\n          hidden=\"${!this.showGlossaryBtn}\"\n        >\n          ${this.showGlossary\n            ? html`<svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                class=\"icon icon-tabler icon-tabler-toggle-right\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n                fill=\"none\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                aria-hidden=\"true\"\n              >\n                <path\n                  fill=\"currentColor\"\n                  d=\"M2 6m0 6a6 6 0 0 1 6 -6h8a6 6 0 0 1 6 6v0a6 6 0 0 1 -6 6h-8a6 6 0 0 1 -6 -6z\"\n                ></path>\n                <path\n                  stroke=\"none\"\n                  d=\"M0 0h24v24H0z\"\n                  fill=\"none\"\n                ></path>\n                <path\n                  d=\"M16 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0\"\n                  id=\"active-toggle\"\n                ></path>\n              </svg>`\n            : html`<svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                class=\"icon icon-tabler icon-tabler-toggle-left\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n                fill=\"none\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                aria-hidden=\"true\"\n              >\n                <path\n                  stroke=\"none\"\n                  d=\"M0 0h24v24H0z\"\n                  fill=\"none\"\n                ></path>\n                <path\n                  d=\"M8 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0\"\n                ></path>\n                <path\n                  d=\"M2 6m0 6a6 6 0 0 1 6 -6h8a6 6 0 0 1 6 6v0a6 6 0 0 1 -6 6h-8a6 6 0 0 1 -6 -6z\"\n                ></path>\n              </svg>`}\n              <label for=\"glossarySwitchDisability\">Glossary</label>\n        </button>\n          <button id=\"data-modal-button\" @click=${this.openDataModal}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"icon icon-tabler icon-tabler-table\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              fill=\"none\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            >\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n              <path\n                d=\"M3 5a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-14z\"\n              ></path>\n              <path d=\"M3 10h18\"></path>\n              <path d=\"M10 3v18\"></path>\n            </svg>\n            Data\n          </button>\n          <button>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"icon icon-tabler icon-tabler-share-3\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              fill=\"none\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            >\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n              <path\n                d=\"M13 4v4c-6.575 1.028 -9.02 6.788 -10 12c-.037 .206 5.384 -5.962 10 -6v4l8 -7l-8 -7z\"\n              ></path>\n            </svg>\n            Share\n          </button>\n        </div>\n        <div\n          class=\"plain-language\"\n          id=\"explainRegionDisability\"\n          aria-expanded=\"false\"\n          tabindex=\"-1\"\n          hidden=\"true\"\n        >\n          ${unsafeHTML(\n            this.explanation ?? \"Error generating plain language summary.\"\n          )}\n        </div>\n        <ol>\n          ${this.data\n            ? this.data.map(\n                (item) => html`\n                  <li tabindex=\"0\">\n                    <div class=\"content\">\n                      <p class=\"label\">${item.label}</p>\n                      <p class=\"definition\" aria-expanded=\"false\" hidden=\"true\">\n                        ${unsafeHTML(item.definition ?? \"Not defined.\")}\n                      </p>\n                    </div>\n                    <div class=\"bar-wrapper\">\n                      <div\n                        class=\"bar\"\n                        style=\"--dr-series-item-flex-amount:${item.flexAmount}\"\n                      ></div>\n                      <ul class=\"details\">\n                        <li class=\"percentage\">\n                          ${item.percentage\n                            ? item.percentage.toLocaleString(\n                                this.localization,\n                                {\n                                  minimumFractionDigits: 2,\n                                  maximumFractionDigits: 2,\n                                }\n                              )\n                            : 0}%\n                        </li>\n                        <li class=\"value\">\n                          ${item.value.toLocaleString(this.localization, {\n                            minimumFractionDigits: 0,\n                            maximumFractionDigits: 0,\n                          })}\n                        </li>\n                      </ul>\n                    </div>\n                  </li>\n                `\n              )\n            : null}\n        </ol>\n        <p class=\"total\">\n          Total:\n          <strong\n            >${this.total.toLocaleString(this.localization, {\n              minimumFractionDigits: 0,\n              maximumFractionDigits: 0,\n            })}</strong\n          >\n        </p>\n      </article>\n      <section\n        id=\"data-modal\"\n        class=\"modal\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-labelledby=\"dataModalTitle\"\n        hidden\n      >\n        <div class=\"modal-content\" role=\"document\">\n          <button id=\"closeModalButton\" @click=${this.closeModal}>\n            Close\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"icon icon-tabler icon-tabler-x\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              fill=\"none\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            >\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n              <path d=\"M18 6l-12 12\" />\n              <path d=\"M6 6l12 12\" />\n            </svg>\n          </button>\n          <h2 id=\"dataModalTitle\">${this.header ?? \"Title\"}</h2>\n          <p class=\"description\">${unsafeHTML(this.insight ?? \"Insights\")}</p>\n          <div\n            class=\"data-table\"\n            role=\"table\"\n            aria-label=\"Descriptive Table Name\"\n          >\n            <div role=\"row\" class=\"flex-row header-row\">\n              <div role=\"columnheader\" class=\"th label\">Label</div>\n              <div role=\"columnheader\" class=\"th percentage\">%</div>\n              <div role=\"columnheader\" class=\"th value\">Value</div>\n            </div>\n            ${this.data\n              ? this.data.map(\n                  (item) => html` <div role=\"row\" class=\"flex-row\">\n                    <div role=\"cell\" class=\"td label\">${item.label}</div>\n                    <div role=\"cell\" class=\"td percentage\">\n                      ${item.percentage\n                        ? item.percentage.toLocaleString(this.localization, {\n                            minimumFractionDigits: 2,\n                            maximumFractionDigits: 2,\n                          })\n                        : 0}%\n                    </div>\n                    <div role=\"cell\" class=\"td value\">\n                      <strong\n                        >${item.value.toLocaleString(this.localization, {\n                          minimumFractionDigits: 0,\n                          maximumFractionDigits: 0,\n                        })}</strong\n                      >\n                    </div>\n                  </div>`\n                )\n              : null}\n            <div role=\"row\" class=\"flex-row footer-row\">\n              <div role=\"tablefooter\" class=\"tf\">\n                Total:\n                <strong\n                  >${this.total.toLocaleString(this.localization, {\n                    minimumFractionDigits: 0,\n                    maximumFractionDigits: 0,\n                  })}</strong\n                >\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    `;\n  }\n\n  isHtml(str: string | undefined): boolean {\n    // A very basic check for HTML tags\n    if (!str) return false;\n    const doc = new DOMParser().parseFromString(str, \"text/html\");\n    return Array.from(doc.body.childNodes).some((node) => node.nodeType === 1);\n  }\n\n  generateExplanation() {\n    // Slice the array to include only the top items as per explanationMaxCount\n    const topItems = this.data.slice(0, this.explanationMaxCount);\n\n    // Convert each item into a plain language string\n    const plainLanguageItems = topItems.map((item) => {\n      // Convert the value to a percentage string with two decimal places\n      const percentage = (\n        (item.value / this.data.reduce((acc, cur) => acc + cur.value, 0)) *\n        100\n      ).toFixed(2);\n      // Format the string with the label and the percentage\n      return `${item.label} (${percentage}%)`;\n    });\n\n    // Combine the items into a sentence\n    let summary = \"In the reported data, \";\n    if (plainLanguageItems.length > 2) {\n      // Join all items with commas, but the last item with 'and'\n      const allButLast = plainLanguageItems.slice(0, -1).join(\", \");\n      const lastItem = plainLanguageItems[plainLanguageItems.length - 1];\n      summary += `${allButLast}, and ${lastItem}`;\n    } else if (plainLanguageItems.length === 2) {\n      // No comma, just 'and'\n      summary += `${plainLanguageItems[0]} and ${plainLanguageItems[1]}`;\n    } else if (plainLanguageItems.length === 1) {\n      // If there's only one item, just add it\n      summary += `${plainLanguageItems[0]}`;\n    }\n\n    // Finish the sentence if there are items\n    if (plainLanguageItems.length > 0) {\n      summary += \" represent the top categories.\";\n    } else {\n      summary += \"No data available.\";\n    }\n\n    this.explanation = summary;\n  }\n\n  // Event handlers can update the state of @properties on the element\n  // instance, causing it to re-render\n\n  togglePlainLanguage() {\n    this.showExplanation = !this.showExplanation;\n    const glossarySwitchDisability = this.shadowRoot!.getElementById(\n      \"glossarySwitchDisability\"\n    ) as HTMLElement;\n    const explainSwitchDisability = this.shadowRoot!.getElementById(\n      \"explainSwitchDisability\"\n    ) as HTMLElement;\n    const explainRegionDisability = this.shadowRoot!.getElementById(\n      \"explainRegionDisability\"\n    ) as HTMLElement;\n\n    explainSwitchDisability.setAttribute(\n      \"aria-pressed\",\n      this.showExplanation.toString()\n    );\n    explainRegionDisability.setAttribute(\n      \"aria-expanded\",\n      this.showExplanation.toString()\n    );\n    explainRegionDisability.hidden = !this.showExplanation;\n\n    if (this.showExplanation) {\n      explainRegionDisability.addEventListener(\n        \"keydown\",\n        this.handleTabFromPanel\n      );\n      explainSwitchDisability.addEventListener(\n        \"keydown\",\n        this.handleTabFromPlainLanguageBtn\n      );\n      glossarySwitchDisability.addEventListener(\n        \"keydown\",\n        this.handleTabFromGlossaryBtn\n      );\n    } else {\n      explainSwitchDisability.focus();\n      explainRegionDisability.removeEventListener(\n        \"keydown\",\n        this.handleTabFromPanel\n      );\n      explainSwitchDisability.removeEventListener(\n        \"keydown\",\n        this.handleTabFromPlainLanguageBtn\n      );\n      glossarySwitchDisability.removeEventListener(\n        \"keydown\",\n        this.handleTabFromGlossaryBtn\n      );\n    }\n  }\n\n  handleTabFromPanel = (event: KeyboardEvent) => {\n    // Handle forward tab (Tab without Shift)\n    const glossarySwitchDisability = this.shadowRoot!.getElementById(\n      \"glossarySwitchDisability\"\n    ) as HTMLElement;\n    const explainSwitchDisability = this.shadowRoot!.getElementById(\n      \"explainSwitchDisability\"\n    ) as HTMLElement;\n    if (event.key === \"Tab\" && !event.shiftKey) {\n      event.preventDefault();\n      glossarySwitchDisability.focus();\n    }\n    // Handle backward tab (Shift + Tab)\n    else if (event.key === \"Tab\" && event.shiftKey) {\n      event.preventDefault();\n      explainSwitchDisability.focus();\n    }\n  };\n\n  handleTabFromPlainLanguageBtn = (event: KeyboardEvent) => {\n    // Handle forward tab (Tab without Shift)\n    const explainRegionDisability = this.shadowRoot!.getElementById(\n      \"explainRegionDisability\"\n    ) as HTMLElement;\n    if (event.key === \"Tab\" && !event.shiftKey) {\n      event.preventDefault();\n      explainRegionDisability.focus();\n    }\n  };\n\n  handleTabFromGlossaryBtn = (event: KeyboardEvent) => {\n    // Handle backward tab (Shift + Tab)\n    const explainRegionDisability = this.shadowRoot!.getElementById(\n      \"explainRegionDisability\"\n    ) as HTMLElement;\n    if (event.key === \"Tab\" && event.shiftKey) {\n      event.preventDefault();\n      explainRegionDisability.focus();\n    }\n  };\n\n  toggleGlossary() {\n    this.showGlossary = !this.showGlossary;\n    const glossarySwitchDisability = this.shadowRoot!.getElementById(\n      \"glossarySwitchDisability\"\n    ) as HTMLElement;\n    glossarySwitchDisability.setAttribute(\n      \"aria-pressed\",\n      this.showGlossary.toString()\n    );\n\n    const definitions = this.shadowRoot!.querySelectorAll(\n      \".definition\"\n    ) as NodeListOf<HTMLElement>;\n\n    // Cycle through all .definition elements and add set aria-expanded to true\n    definitions.forEach((definition: HTMLElement) => {\n      definition.setAttribute(\"aria-expanded\", this.showGlossary.toString());\n      definition.hidden = !this.showGlossary;\n    });\n  }\n\n  openDataModal() {\n    this.previouslyFocusedElement = this.shadowRoot!\n      .activeElement as HTMLElement;\n\n    const modal = this.shadowRoot!.getElementById(\"data-modal\") as HTMLElement;\n\n    const closeModalButton =\n      this.shadowRoot!.getElementById(\"closeModalButton\");\n\n    modal.hidden = false;\n    let focusableElements = modal.querySelectorAll(\n      this.focusableElementsString\n    ) as NodeListOf<HTMLElement>;\n    this.firstFocusableElement = focusableElements[0];\n    this.lastFocusableElement = focusableElements[focusableElements.length - 1];\n\n    closeModalButton!.focus();\n    modal.addEventListener(\"keydown\", this.trapTabKey);\n  }\n\n  closeModal() {\n    const modal = this.shadowRoot!.getElementById(\"data-modal\") as HTMLElement;\n    modal.hidden = true;\n    this.previouslyFocusedElement!.focus(); // Return focus to the element that opened the modal\n    modal.removeEventListener(\"keydown\", this.trapTabKey);\n  }\n\n  trapTabKey = (event: KeyboardEvent) => {\n    if (event.key === \"Tab\") {\n      if (event.shiftKey) {\n        /* shift + tab */ if (\n          document.activeElement === this.firstFocusableElement\n        ) {\n          event.preventDefault();\n          this.lastFocusableElement!.focus();\n        }\n      } /* tab */ else {\n        if (document.activeElement === this.lastFocusableElement) {\n          event.preventDefault();\n          this.firstFocusableElement!.focus();\n        }\n      }\n    } else if (event.key === \"Escape\") {\n      this.closeModal();\n    }\n  };\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"data-rep\": DataRep;\n  }\n}\n"]}